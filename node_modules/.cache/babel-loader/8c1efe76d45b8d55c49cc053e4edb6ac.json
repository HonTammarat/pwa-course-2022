{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\GI262\\\\Week3\\\\DemoGI472J\\\\pwa-course-2022\\\\src\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Chatbox from './components/Chatbox.js';\nimport Inputbox from './components/Inputbox.js';\nimport './css/Chat.css';\nimport { useChatStateContext } from './context/FirebaseChatContextProvider';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  const {\n    uid\n  } = useParams();\n  const {\n    getUserProfile,\n    sendPrivateMsg,\n    listenToPrivateChat\n  } = useChatStateContext();\n  const [friendName, setFriendName] = useState(\"\");\n  const [chatData, setChatData] = useState([]);\n\n  const onMsg = msg => {\n    const mappedValue = { ...msg,\n      key: msg.timestamp || Date.now(),\n      displayName: friendName,\n      position: msg.user === uid ? \"left\" : \"right\"\n    };\n    setChatData(oldChat => [...oldChat, mappedValue]);\n  };\n\n  useEffect(() => {\n    getUserProfile(uid).then(friend => {\n      friend && setFriendName(friend.displayName);\n      return friend;\n    });\n    const unsubscribePrivateChat = listenToPrivateChat(uid, onMsg);\n    return () => {\n      unsubscribePrivateChat();\n    };\n  }, [uid]);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ctop\",\n      value: friendName,\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/main\",\n        className: \"backbutton\",\n        children: \"BACK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Chatbox, {\n      data: chatData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cbottom\",\n      children: /*#__PURE__*/_jsxDEV(Inputbox, {\n        onEnter: x => sendPrivateMsg(x, uid)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"JRK7Ti0PNUFTnJHscR6o+jdvy+M=\", false, function () {\n  return [useParams, useChatStateContext];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["E:/Project/GI262/Week3/DemoGI472J/pwa-course-2022/src/Chat.js"],"names":["useEffect","useState","Link","Chatbox","Inputbox","useChatStateContext","useParams","Chat","uid","getUserProfile","sendPrivateMsg","listenToPrivateChat","friendName","setFriendName","chatData","setChatData","onMsg","msg","mappedValue","key","timestamp","Date","now","displayName","position","user","oldChat","then","friend","unsubscribePrivateChat","window","scrollTo","x"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAO,gBAAP;AACA,SAASC,mBAAT,QAAoC,uCAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAEZ,QAAM;AAAEC,IAAAA;AAAF,MAAUF,SAAS,EAAzB;AACA,QAAM;AAAEG,IAAAA,cAAF;AAAkBC,IAAAA,cAAlB;AAAkCC,IAAAA;AAAlC,MAA0DN,mBAAmB,EAAnF;AACA,QAAM,CAAEO,UAAF,EAAcC,aAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAEa,QAAF,EAAYC,WAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMe,KAAK,GAAIC,GAAD,IAAS;AAErB,UAAMC,WAAW,GAAG,EAClB,GAAGD,GADe;AAElBE,MAAAA,GAAG,EAAEF,GAAG,CAACG,SAAJ,IAAiBC,IAAI,CAACC,GAAL,EAFJ;AAGlBC,MAAAA,WAAW,EAAEX,UAHK;AAIlBY,MAAAA,QAAQ,EAAEP,GAAG,CAACQ,IAAJ,KAAajB,GAAb,GAAmB,MAAnB,GAA4B;AAJpB,KAApB;AAOAO,IAAAA,WAAW,CAACW,OAAO,IAAI,CAAC,GAAGA,OAAJ,EAAaR,WAAb,CAAZ,CAAX;AACD,GAVD;;AAYAlB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,cAAc,CAACD,GAAD,CAAd,CACCmB,IADD,CACMC,MAAM,IAAI;AACdA,MAAAA,MAAM,IAAIf,aAAa,CAACe,MAAM,CAACL,WAAR,CAAvB;AACA,aAAOK,MAAP;AACD,KAJD;AAMA,UAAMC,sBAAsB,GAAGlB,mBAAmB,CAACH,GAAD,EAAMQ,KAAN,CAAlD;AAEA,WAAO,MAAM;AAACa,MAAAA,sBAAsB;AAAG,KAAvC;AACD,GAVQ,EAUN,CAACrB,GAAD,CAVM,CAAT;AAYAR,EAAAA,SAAS,CAAC,MAAM;AACd8B,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAEnB,UAA7B;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,OAAT;AAAiB,QAAA,SAAS,EAAC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEE;AAAf;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEkB,CAAC,IAAEtB,cAAc,CAACsB,CAAD,EAAGxB,GAAH;AAApC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaD;;GAhDMD,I;UAEWD,S,EACgDD,mB;;;KAH3DE,I;AAkDP,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Chatbox from './components/Chatbox.js';\nimport Inputbox from './components/Inputbox.js';\nimport './css/Chat.css';\nimport { useChatStateContext } from './context/FirebaseChatContextProvider';\nimport { useParams } from \"react-router-dom\";\n\nfunction Chat() {\n\n    const { uid } = useParams();\n    const { getUserProfile, sendPrivateMsg, listenToPrivateChat } = useChatStateContext();\n    const [ friendName, setFriendName ] = useState(\"\");\n    const [ chatData, setChatData ] = useState([]);\n  \n    const onMsg = (msg) => {\n      \n      const mappedValue = {\n        ...msg,\n        key: msg.timestamp || Date.now(),\n        displayName: friendName,\n        position: msg.user === uid ? \"left\" : \"right\"\n      };\n      \n      setChatData(oldChat => [...oldChat ,mappedValue]);\n    }\n  \n    useEffect(() => {\n      getUserProfile(uid)\n      .then(friend => {\n        friend && setFriendName(friend.displayName);\n        return friend;\n      })\n  \n      const unsubscribePrivateChat = listenToPrivateChat(uid, onMsg);\n  \n      return () => {unsubscribePrivateChat()}\n    }, [uid]);\n  \n    useEffect(() => {\n      window.scrollTo(0, 0)\n    }, [])\n\n    return(\n        <div className='chat'>\n            <div className='ctop' value={friendName}>\n                <Link to='/main' className='backbutton'>\n                    BACK\n                </Link>\n            </div>\n            <Chatbox data={chatData}/>\n            <div className='cbottom'>\n                <Inputbox onEnter={x=>sendPrivateMsg(x,uid)}/>\n            </div>\n        </div>\n    );\n  }\n  \n  export default Chat;"]},"metadata":{},"sourceType":"module"}