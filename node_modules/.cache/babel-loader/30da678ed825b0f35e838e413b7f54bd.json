{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\GI262\\\\Week3\\\\DemoGI472J\\\\pwa-course-2022\\\\src\\\\components\\\\Chatline.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chatline(props) {\n  _s();\n\n  let text = props.text;\n  const [element, setElement] = useState(text);\n\n  function transform(text) {\n    if (text.startsWith(\"/link\")) {\n      setElement( /*#__PURE__*/_jsxDEV(Link, {\n        to: text,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 18\n      }, this));\n    } else if (text.startsWith(\"/embed\")) {\n      const html = text.split(\" \").slice(1).join(\" \");\n      setElement( /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: html\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 18\n      }, this));\n    } else if (text.startsWith(\"/age\")) {\n      const [, name] = text.split(\" \");\n      fetch(\"https://api.agify.io/?name=\" + name).then(res => res.json()).then(data => setElement(data.age));\n    } else if (text.startsWith(\"/gender\")) {\n      const [, name] = text.split(\" \");\n      fetch(\"https://api.genderize.io/?name=\" + name).then(res => res.json()).then(data => setElement(data.gender));\n    } else if (text.startsWith(\"/randomfact\")) {\n      fetch(\"https://uselessfacts.jsph.pl/random.json?language=en\").then(res => res.json()).then(data => setElement(data.text));\n    }\n  }\n\n  ;\n  useEffect(() => {\n    transform(text);\n  }, []);\n  return element;\n}\n\n_s(Chatline, \"HnevMUOP2H+z1tvJY9NlXFepzUA=\");\n\n_c = Chatline;\nexport default Chatline;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatline\");","map":{"version":3,"sources":["E:/Project/GI262/Week3/DemoGI472J/pwa-course-2022/src/components/Chatline.js"],"names":["useState","useEffect","Link","Chatline","props","text","element","setElement","transform","startsWith","html","split","slice","join","__html","name","fetch","then","res","json","data","age","gender"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,MAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAACK,IAAD,CAAtC;;AAEA,WAASG,SAAT,CAAmBH,IAAnB,EAAyB;AACvB,QAAIA,IAAI,CAACI,UAAL,CAAgB,OAAhB,CAAJ,EAA8B;AAC5BF,MAAAA,UAAU,eAAC,QAAC,IAAD;AAAM,QAAA,EAAE,EAAEF,IAAV;AAAA,kBAAiBA;AAAjB;AAAA;AAAA;AAAA;AAAA,cAAD,CAAV;AACD,KAFD,MAGK,IAAIA,IAAI,CAACI,UAAL,CAAgB,QAAhB,CAAJ,EAA+B;AAClC,YAAMC,IAAI,GAAGL,IAAI,CAACM,KAAL,CAAW,GAAX,EAAgBC,KAAhB,CAAsB,CAAtB,EAAyBC,IAAzB,CAA8B,GAA9B,CAAb;AACAN,MAAAA,UAAU,eAAC;AAAK,QAAA,uBAAuB,EAAE;AAAEO,UAAAA,MAAM,EAAEJ;AAAV;AAA9B;AAAA;AAAA;AAAA;AAAA,cAAD,CAAV;AACD,KAHI,MAIA,IAAIL,IAAI,CAACI,UAAL,CAAgB,MAAhB,CAAJ,EAA6B;AAChC,YAAM,GAAGM,IAAH,IAAWV,IAAI,CAACM,KAAL,CAAW,GAAX,CAAjB;AACAK,MAAAA,KAAK,CAAC,gCAAgCD,IAAjC,CAAL,CACGE,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAIb,UAAU,CAACa,IAAI,CAACC,GAAN,CAF1B;AAGD,KALI,MAMA,IAAIhB,IAAI,CAACI,UAAL,CAAgB,SAAhB,CAAJ,EAAgC;AACnC,YAAM,GAAGM,IAAH,IAAWV,IAAI,CAACM,KAAL,CAAW,GAAX,CAAjB;AACAK,MAAAA,KAAK,CAAC,oCAAoCD,IAArC,CAAL,CACGE,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAIb,UAAU,CAACa,IAAI,CAACE,MAAN,CAF1B;AAGD,KALI,MAMA,IAAIjB,IAAI,CAACI,UAAL,CAAgB,aAAhB,CAAJ,EAAoC;AACvCO,MAAAA,KAAK,CAAC,sDAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAIb,UAAU,CAACa,IAAI,CAACf,IAAN,CAF1B;AAGD;AACF;;AAAA;AAEDJ,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,SAAS,CAACH,IAAD,CAAT;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACEC,OADF;AAGD;;GAvCQH,Q;;KAAAA,Q;AAyCT,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\n\nfunction Chatline(props) {\n  let text = props.text;\n\n  const [element, setElement] = useState(text);\n\n  function transform(text) {\n    if (text.startsWith(\"/link\")) {\n      setElement(<Link to={text}>{text}</Link>);\n    }\n    else if (text.startsWith(\"/embed\")) {\n      const html = text.split(\" \").slice(1).join(\" \");\n      setElement(<div dangerouslySetInnerHTML={{ __html: html }}></div>);\n    }\n    else if (text.startsWith(\"/age\")) {\n      const [, name] = text.split(\" \");\n      fetch(\"https://api.agify.io/?name=\" + name)\n        .then(res => res.json())\n        .then(data => setElement(data.age));\n    }\n    else if (text.startsWith(\"/gender\")) {\n      const [, name] = text.split(\" \");\n      fetch(\"https://api.genderize.io/?name=\" + name)\n        .then(res => res.json())\n        .then(data => setElement(data.gender));\n    }\n    else if (text.startsWith(\"/randomfact\")) {\n      fetch(\"https://uselessfacts.jsph.pl/random.json?language=en\")\n        .then(res => res.json())\n        .then(data => setElement(data.text));\n    }\n  };\n\n  useEffect(() => {\n    transform(text);\n  }, []);\n\n  return (\n    element\n  )\n}\n\nexport default Chatline;"]},"metadata":{},"sourceType":"module"}